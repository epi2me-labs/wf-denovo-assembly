//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    out_dir = "output"
    sample = null
    sample_sheet = null
    wfversion = "v0.0.1"
    aws_image_prefix = null
    aws_queue = null
    report_name = "report"
    disable_ping = false
    analyse_unclassified = false
    genome_size = 5000000
    read_error = 0.002
    process_label = "wfdenovoassembly"
    monochrome_logs = false
    validate_params = true
    threads = 4
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf'

    wf {
        example_cmd = [
            "--fastq test_data/reads.fastq.gz"
        ]
        container_sha = "sha34eff29f4e0c8ec07a3062a3dc3e2f06a12a36b9"
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-denovo-assembly'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-denovo-assembly'
    description     = 'Template workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    //version       = 'v0.0.7'  // TODO: do switch to this?
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfdenovoassembly {
        container = "ontresearch/wf-denovo-assembly:${params.wf.container_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // profile using conda environments
    conda {
        docker.enabled = false
        process {
            withLabel:wfdenovoassembly {
                conda = "${projectDir}/environment.yaml"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
            enabled = true // required for 22.08
            cacheDir = ""
            useMamba = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfdenovoassembly {
                container = "${params.aws_image_prefix}-wf-denovo-assembly:${params.wf.container_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}
